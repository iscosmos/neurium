// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: tms.proto

package product

import (
	"context"

	"github.com/iscosmos/neurium/apps/tms/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateProductCategoryReq                        = pb.CreateProductCategoryReq
	CreateProductCategoryResp                       = pb.CreateProductCategoryResp
	CreateProductEndpointReq                        = pb.CreateProductEndpointReq
	CreateProductEndpointResp                       = pb.CreateProductEndpointResp
	CreateProductReq                                = pb.CreateProductReq
	CreateProductResp                               = pb.CreateProductResp
	CreateProductSchemaModuleReq                    = pb.CreateProductSchemaModuleReq
	CreateProductSchemaModuleResp                   = pb.CreateProductSchemaModuleResp
	DeleteProductCategoryReq                        = pb.DeleteProductCategoryReq
	DeleteProductCategoryResp                       = pb.DeleteProductCategoryResp
	DeleteProductEndpointReq                        = pb.DeleteProductEndpointReq
	DeleteProductEndpointResp                       = pb.DeleteProductEndpointResp
	DeleteProductReq                                = pb.DeleteProductReq
	DeleteProductResp                               = pb.DeleteProductResp
	DeleteProductSchemaModuleReq                    = pb.DeleteProductSchemaModuleReq
	DeleteProductSchemaModuleResp                   = pb.DeleteProductSchemaModuleResp
	GetProductCategoryReq                           = pb.GetProductCategoryReq
	GetProductCategoryResp                          = pb.GetProductCategoryResp
	GetProductCategoryTreeReq                       = pb.GetProductCategoryTreeReq
	GetProductCategoryTreeResp                      = pb.GetProductCategoryTreeResp
	GetProductCategoryTreeResp_ProductCategory      = pb.GetProductCategoryTreeResp_ProductCategory
	GetProductEndpointReq                           = pb.GetProductEndpointReq
	GetProductEndpointResp                          = pb.GetProductEndpointResp
	GetProductReq                                   = pb.GetProductReq
	GetProductResp                                  = pb.GetProductResp
	GetProductSchemaModuleReq                       = pb.GetProductSchemaModuleReq
	GetProductSchemaModuleResp                      = pb.GetProductSchemaModuleResp
	GetProductSchemaVersionReq                      = pb.GetProductSchemaVersionReq
	GetProductSchemaVersionResp                     = pb.GetProductSchemaVersionResp
	GetProductSchemaVersionWithReq                  = pb.GetProductSchemaVersionWithReq
	GetProductSchemaVersionWithResp                 = pb.GetProductSchemaVersionWithResp
	ListProductEndpointReq                          = pb.ListProductEndpointReq
	ListProductEndpointResp                         = pb.ListProductEndpointResp
	ListProductEndpointResp_ProductEndpoint         = pb.ListProductEndpointResp_ProductEndpoint
	ListProductReq                                  = pb.ListProductReq
	ListProductResp                                 = pb.ListProductResp
	ListProductResp_Product                         = pb.ListProductResp_Product
	ListProductSchemaModuleReq                      = pb.ListProductSchemaModuleReq
	ListProductSchemaModuleResp                     = pb.ListProductSchemaModuleResp
	ListProductSchemaModuleResp_ProductSchemaModule = pb.ListProductSchemaModuleResp_ProductSchemaModule
	ListProductSchemaReq                            = pb.ListProductSchemaReq
	ListProductSchemaResp                           = pb.ListProductSchemaResp
	ListProductSchemaResp_ProductSchema             = pb.ListProductSchemaResp_ProductSchema
	UpdateProductCategoryReq                        = pb.UpdateProductCategoryReq
	UpdateProductCategoryResp                       = pb.UpdateProductCategoryResp
	UpdateProductEndpointReq                        = pb.UpdateProductEndpointReq
	UpdateProductEndpointResp                       = pb.UpdateProductEndpointResp
	UpdateProductReq                                = pb.UpdateProductReq
	UpdateProductResp                               = pb.UpdateProductResp
	UpdateProductSchemaModuleReq                    = pb.UpdateProductSchemaModuleReq
	UpdateProductSchemaModuleResp                   = pb.UpdateProductSchemaModuleResp
	UpdateProductStatusReq                          = pb.UpdateProductStatusReq
	UpdateProductStatusResp                         = pb.UpdateProductStatusResp

	Product interface {
		// 创建产品
		CreateProduct(ctx context.Context, in *CreateProductReq, opts ...grpc.CallOption) (*CreateProductResp, error)
		// 更新产品
		UpdateProduct(ctx context.Context, in *UpdateProductReq, opts ...grpc.CallOption) (*UpdateProductResp, error)
		// 删除产品
		DeleteProduct(ctx context.Context, in *DeleteProductReq, opts ...grpc.CallOption) (*DeleteProductResp, error)
		// 产品详情
		GetProduct(ctx context.Context, in *GetProductReq, opts ...grpc.CallOption) (*GetProductResp, error)
		// 产品列表
		ListProduct(ctx context.Context, in *ListProductReq, opts ...grpc.CallOption) (*ListProductResp, error)
		// 修改发布状态
		UpdateProductStatus(ctx context.Context, in *UpdateProductStatusReq, opts ...grpc.CallOption) (*UpdateProductStatusResp, error)
	}

	defaultProduct struct {
		cli zrpc.Client
	}
)

func NewProduct(cli zrpc.Client) Product {
	return &defaultProduct{
		cli: cli,
	}
}

// 创建产品
func (m *defaultProduct) CreateProduct(ctx context.Context, in *CreateProductReq, opts ...grpc.CallOption) (*CreateProductResp, error) {
	client := pb.NewProductClient(m.cli.Conn())
	return client.CreateProduct(ctx, in, opts...)
}

// 更新产品
func (m *defaultProduct) UpdateProduct(ctx context.Context, in *UpdateProductReq, opts ...grpc.CallOption) (*UpdateProductResp, error) {
	client := pb.NewProductClient(m.cli.Conn())
	return client.UpdateProduct(ctx, in, opts...)
}

// 删除产品
func (m *defaultProduct) DeleteProduct(ctx context.Context, in *DeleteProductReq, opts ...grpc.CallOption) (*DeleteProductResp, error) {
	client := pb.NewProductClient(m.cli.Conn())
	return client.DeleteProduct(ctx, in, opts...)
}

// 产品详情
func (m *defaultProduct) GetProduct(ctx context.Context, in *GetProductReq, opts ...grpc.CallOption) (*GetProductResp, error) {
	client := pb.NewProductClient(m.cli.Conn())
	return client.GetProduct(ctx, in, opts...)
}

// 产品列表
func (m *defaultProduct) ListProduct(ctx context.Context, in *ListProductReq, opts ...grpc.CallOption) (*ListProductResp, error) {
	client := pb.NewProductClient(m.cli.Conn())
	return client.ListProduct(ctx, in, opts...)
}

// 修改发布状态
func (m *defaultProduct) UpdateProductStatus(ctx context.Context, in *UpdateProductStatusReq, opts ...grpc.CallOption) (*UpdateProductStatusResp, error) {
	client := pb.NewProductClient(m.cli.Conn())
	return client.UpdateProductStatus(ctx, in, opts...)
}
