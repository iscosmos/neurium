// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: tms.proto

package server

import (
	"context"

	"github.com/iscosmos/neurium/apps/tms/rpc/internal/logic/productschemamodule"
	"github.com/iscosmos/neurium/apps/tms/rpc/internal/svc"
	"github.com/iscosmos/neurium/apps/tms/rpc/pb"
)

type ProductSchemaModuleServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedProductSchemaModuleServer
}

func NewProductSchemaModuleServer(svcCtx *svc.ServiceContext) *ProductSchemaModuleServer {
	return &ProductSchemaModuleServer{
		svcCtx: svcCtx,
	}
}

// 创建物模型模块
func (s *ProductSchemaModuleServer) CreateProductSchemaModule(ctx context.Context, in *pb.CreateProductSchemaModuleReq) (*pb.CreateProductSchemaModuleResp, error) {
	l := productschemamodulelogic.NewCreateProductSchemaModuleLogic(ctx, s.svcCtx)
	return l.CreateProductSchemaModule(in)
}

// 更新物模型模块
func (s *ProductSchemaModuleServer) UpdateProductSchemaModule(ctx context.Context, in *pb.UpdateProductSchemaModuleReq) (*pb.UpdateProductSchemaModuleResp, error) {
	l := productschemamodulelogic.NewUpdateProductSchemaModuleLogic(ctx, s.svcCtx)
	return l.UpdateProductSchemaModule(in)
}

// 删除物模型模块
func (s *ProductSchemaModuleServer) DeleteProductSchemaModule(ctx context.Context, in *pb.DeleteProductSchemaModuleReq) (*pb.DeleteProductSchemaModuleResp, error) {
	l := productschemamodulelogic.NewDeleteProductSchemaModuleLogic(ctx, s.svcCtx)
	return l.DeleteProductSchemaModule(in)
}

// 查看物模型模块
func (s *ProductSchemaModuleServer) GetProductSchemaModule(ctx context.Context, in *pb.GetProductSchemaModuleReq) (*pb.GetProductSchemaModuleResp, error) {
	l := productschemamodulelogic.NewGetProductSchemaModuleLogic(ctx, s.svcCtx)
	return l.GetProductSchemaModule(in)
}

// 物模型模块列表
func (s *ProductSchemaModuleServer) ListProductSchemaModule(ctx context.Context, in *pb.ListProductSchemaModuleReq) (*pb.ListProductSchemaModuleResp, error) {
	l := productschemamodulelogic.NewListProductSchemaModuleLogic(ctx, s.svcCtx)
	return l.ListProductSchemaModule(in)
}
