// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3

package types

type CreateProductCategoryReq struct {
	ParentId int64  `json:"parentId"`
	Name     string `json:"name" validate:"required,min=2,max=32"`
}

type CreateProductCategoryResp struct {
	Id int64 `json:"id"`
}

type CreateProductEndpointReq struct {
	ProductId   int64  `json:"productId" validate:"required,gt=0"`
	Name        string `json:"name" validate:"required,min=2,max=32"`
	Protocol    int64  `json:"protocol" validate:"required,gt=0,lt=3"`
	Path        string `json:"path" validate:"max=255"`
	Access      int64  `json:"access" validate:"required,gt=0,lt=100"`
	Description string `json:"description" validate:"max=120"`
}

type CreateProductEndpointResp struct {
	Id int64 `json:"id"`
}

type CreateProductReq struct {
	Name               string `json:"name" validate:"required,min=2,max=32"`
	CategoryId         int64  `json:"categoryId" validate:"required,gt=0"`
	NodeType           int64  `json:"nodeType" validate:"required,gt=0,lt=4"`
	NetworkMode        int64  `json:"networkMode" validate:"gt=0,lt=5"`
	IngressGatewayMode int64  `json:"ingressGatewayMode" validate:"gt=0,lt=6"`
	DataProtocol       int64  `json:"dataProtocol" validate:"required,gt=0,lt=3"`
	DataFormat         int64  `json:"dataFormat" validate:"required,gt=0,lt=3"`
	HeartBeat          int64  `json:"heartBeat"`
	Vendor             string `json:"vendor" validate:"max=120"`
	BrandModel         string `json:"brandModel" validate:"max=120"`
	Description        string `json:"description" validate:"max=120"`
}

type CreateProductResp struct {
	Id int64 `json:"id"`
}

type CreateProductSchemaModuleReq struct {
	VersionId   int64  `json:"versionId"`
	Name        string `json:"name"`
	Identifier  string `json:"identifier"`
	Description string `json:"description"`
}

type CreateProductSchemaModuleResp struct {
	Id int64 `json:"id"`
}

type DeleteProductCategoryReq struct {
	Id int64 `json:"id"`
}

type DeleteProductCategoryResp struct {
}

type DeleteProductEndpointReq struct {
	Id int64 `json:"id"`
}

type DeleteProductEndpointResp struct {
}

type DeleteProductReq struct {
	Id int64 `json:"id"`
}

type DeleteProductResp struct {
}

type DeleteProductSchemaModuleReq struct {
	Id int64 `json:"id"`
}

type DeleteProductSchemaModuleResp struct {
}

type GetProductCategoryReq struct {
	Id int64 `path:"id"`
}

type GetProductCategoryResp struct {
	Id         int64  `json:"id"`
	ParentId   int64  `json:"parentId"`
	Name       string `json:"name"`
	ParentName string `json:"parentName"`
	CreateBy   string `json:"createBy"`
	UpdateBy   string `json:"updateBy"`
	CreatedAt  int64  `json:"createdAt"`
	UpdatedAt  int64  `json:"updatedAt"`
}

type GetProductCategoryTreeReq struct {
}

type GetProductCategoryTreeResp struct {
	Data []ProductCategoryTreeItem `json:"data"`
}

type GetProductEndpointReq struct {
	Id int64 `path:"id"`
}

type GetProductEndpointResp struct {
	Id          int64  `json:"id"`
	ProductId   int64  `json:"productId"`
	Name        string `json:"name"`
	Protocol    int64  `json:"protocol"`
	Path        string `json:"path"`
	Access      int64  `json:"access"`
	Description string `json:"description"`
	CreateBy    string `json:"createBy"`
	UpdateBy    string `json:"updateBy"`
	CreatedAt   int64  `json:"createdAt"`
	UpdatedAt   int64  `json:"updatedAt"`
}

type GetProductReq struct {
	Id int64 `path:"id"`
}

type GetProductResp struct {
	Id                 int64  `json:"id"`
	CategoryId         int64  `json:"categoryId"`
	Name               string `json:"name"`
	Key                string `json:"key"`
	NodeType           int64  `json:"nodeType"`
	NetworkMode        int64  `json:"networkMode"`
	IngressGatewayMode int64  `json:"ingressGatewayMode"`
	DataProtocol       int64  `json:"dataProtocol"`
	DataFormat         int64  `json:"dataFormat"`
	HeartBeat          int64  `json:"heartBeat"`
	Status             int64  `json:"status"`
	Vendor             string `json:"vendor"`
	BrandModel         string `json:"brandModel"`
	Description        string `json:"description"`
	CreateBy           string `json:"createBy"`
	UpdateBy           string `json:"updateBy"`
	CreatedAt          int64  `json:"createdAt"`
	UpdatedAt          int64  `json:"updatedAt"`
}

type GetProductSchemaModuleReq struct {
	Id int64 `path:"id"`
}

type GetProductSchemaModuleResp struct {
	Id          int64  `json:"id"`
	VersionId   int64  `json:"versionId"`
	Name        string `json:"name"`
	Identifier  string `json:"identifier"`
	Description string `json:"description"`
	CreateBy    string `json:"createBy"`
	CreatedAt   int64  `json:"createdAt"`
}

type GetProductSchemaVersionWithReq struct {
	ProductId int64 `form:"productId"`
	Status    int64 `form:"status"`
}

type GetProductSchemaVersionWithResp struct {
	Id        int64  `json:"id"`
	ProductId int64  `json:"productId"`
	Version   int64  `json:"version"`
	Status    int64  `json:"status"`
	CreateBy  string `json:"createBy"`
	CreatedAt int64  `json:"createdAt"`
}

type ListProductEndpointReq struct {
	ProductId int64 `form:"productId"`
}

type ListProductEndpointResp struct {
	Data []ProductEndpointItem `json:"data"`
}

type ListProductReq struct {
	PageNum      int64  `form:"pageNum,optional"`
	PageSize     int64  `form:"pageSize,optional"`
	CategoryId   int64  `form:"categoryId"`
	Keyword      string `form:"keyword,optional"`
	NodeType     int64  `form:"nodeType,optional"`
	DataProtocol int64  `form:"dataProtocol,optional"`
	Status       int64  `form:"status,optional"`
}

type ListProductResp struct {
	Total int64         `json:"total"`
	Data  []ProductItem `json:"data"`
}

type ListProductSchemaModuleReq struct {
	VersionId int64 `form:"versionId"`
}

type ListProductSchemaModuleResp struct {
	Data []ProductSchemaModuleItem `json:"data"`
}

type ListProductSchemaReq struct {
	PageNum  int64  `form:"pageNum"`
	PageSize int64  `form:"pageSize"`
	ModuleId int64  `form:"moduleId"`
	Keyword  string `form:"keyword,optional"`
}

type ListProductSchemaResp struct {
	Total int64               `json:"total"`
	Data  []ProductSchemaItem `json:"data"`
}

type ProductCategoryTreeItem struct {
	Id         int64                     `json:"id"`
	ParentId   int64                     `json:"parentId"`
	Name       string                    `json:"name"`
	ParentName string                    `json:"parentName"`
	Children   []ProductCategoryTreeItem `json:"children"`
}

type ProductEndpointItem struct {
	Id          int64  `json:"id"`
	Name        string `json:"name"`
	Protocol    int64  `json:"protocol"`
	Path        string `json:"path"`
	Access      int64  `json:"access"`
	Description string `json:"description"`
	CreateBy    string `json:"createBy"`
	UpdateBy    string `json:"updateBy"`
}

type ProductItem struct {
	Id                 int64  `json:"id"`
	Name               string `json:"name"`
	CategoryId         int64  `json:"categoryId"`
	NodeType           int64  `json:"nodeType"`
	NetworkMode        int64  `json:"networkMode"`
	IngressGatewayMode int64  `json:"ingressGatewayMode"`
	DataProtocol       int64  `json:"dataProtocol"`
	DataFormat         int64  `json:"dataFormat"`
	Vendor             string `json:"vendor"`
	Status             int64  `json:"status"`
	CreateBy           string `json:"createBy"`
	CreatedAt          int64  `json:"createdAt"`
}

type ProductSchemaItem struct {
	Id              int64               `json:"id"`
	ModuleId        int64               `json:"moduleId"`
	ParentId        int64               `json:"parentId"`
	Type            int64               `json:"type"`
	Name            string              `json:"name"`
	Identifier      string              `json:"identifier"`
	Specification   string              `json:"specification"`
	DataType        int64               `json:"dataType"`
	AccessType      int64               `json:"accessType"`
	EventType       int64               `json:"eventType"`
	ServiceCallType int64               `json:"serviceCallType"`
	ParameterType   int64               `json:"parameterType"`
	Children        []ProductSchemaItem `json:"children"`
}

type ProductSchemaModuleItem struct {
	Id          int64  `json:"id"`
	VersionId   int64  `json:"versionId"`
	Name        string `json:"name"`
	Identifier  string `json:"identifier"`
	Description string `json:"description"`
}

type UpdateProductCategoryReq struct {
	Id   int64  `json:"id"`
	Name string `json:"name" validate:"required,min=2,max=32"`
}

type UpdateProductCategoryResp struct {
}

type UpdateProductEndpointReq struct {
	Id          int64  `json:"id"`
	Name        string `json:"name" validate:"required,min=2,max=32"`
	Path        string `json:"path" validate:"max=255"`
	Access      int64  `json:"access" validate:"required,gt=0,lt=100"`
	Description string `json:"description" validate:"max=120"`
}

type UpdateProductEndpointResp struct {
}

type UpdateProductReq struct {
	Id          int64  `json:"id"`
	Name        string `json:"name" validate:"required,min=2,max=32"`
	HeartBeat   int64  `json:"heartBeat"`
	Vendor      string `json:"vendor" validate:"max=120"`
	BrandModel  string `json:"brandModel" validate:"max=120"`
	Description string `json:"description" validate:"max=120"`
}

type UpdateProductResp struct {
}

type UpdateProductSchemaModuleReq struct {
	Id          int64  `json:"id"`
	Name        string `json:"name"`
	Identifier  string `json:"identifier"`
	Description string `json:"description"`
}

type UpdateProductSchemaModuleResp struct {
}

type UpdateProductStatusReq struct {
	Id     int64 `json:"id"`
	Status int64 `json:"status"`
}

type UpdateProductStatusResp struct {
}
